<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">

<div class="container">
  <div class="row">
    <div class="col-lg-12">
    <iframe id="forecast_embed" type="text/html" frameborder="0" height="245" width="100%" src="http://forecast.io/embed/#lat=41.791284&lon=-88.408141&name=Home"> </iframe>
    </div>
  </div>
  <div class="row">
    <div class="page-header text-center">
      <h1>Water Sensors</h1>
    </div>
    <div class="col-xs-12">
    <% range = params[:range] || 15 %>

    <%= line_chart Sensor.select([:name, :unit]).where('created_at > ?', Time.now - 1.hour).where("name like '%Tube%' or name like '%Tank%'").uniq.order(:name).map { |sensor|
      { name: sensor.name, data: Sensor.group_by_minute(:created_at, last: range
      ).where(name: sensor.name).average(:reading), library:  { title: { text: sensor.name }, xAxis: { title: { text: "Time"}}, yAxis: { title: { text:     sensor.unit}}}}}%>
    </div>
    <div class="page-header text-center">
      <h1>Ambient Sensors</h1>
    </div>
    <div class="col-xs-12">
        <%= line_chart Sensor.select([:name, :unit]).where('created_at > ?', Time.now - 1.hour).where("name like '%ambient%'").uniq.order(:name).map {|sensor| 
          {name: sensor.name.humanize, data: Sensor.group_by_minute(:created_at, last: range).where(name: sensor.name).average(:reading), discrete: true, library:  { title: { text: sensor.name.humanize }, xAxis: { title: { text: "Time"}}, yAxis: { title: { text: sensor.unit}}}}}
        %>
    </div>


  <div class="page-header text-center">
    <h1>Raspberry Pi</h1>
  </div>
    <div class="col-xs-12">
      <%= line_chart Sensor.select([:name, :unit]).where('created_at > ?', Time.now - 1.hour).where("name like '%cpu%'").uniq.order(:name).map {|sensor| 
          {name: sensor.name.humanize, data: Sensor.group_by_minute(:created_at, last: range).where(name: sensor.name).average(:reading), discrete: true, library:  { title: { text: sensor.name.humanize }, xAxis: { title: { text: "Time"}}, yAxis: { title: { text: sensor.unit}}}}} %>
    </div>
  </div>
</div>



<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>